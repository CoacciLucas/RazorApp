@page
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> IdtUserManager
@model IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.IdtUser[0].UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IdtUser[0].Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IdtUser[0].Roles)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.IdtUser)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @{ var role = new List<string>();}
                @for (int i = 0; i < item.Roles.Count(); i++)
                {
                    role.Add(item.Roles[i]);
                }
                @{ var roleOrdered = string.Join(", ", role.OrderBy(r => r));}

                @Html.DisplayFor(modelItem => roleOrdered)
            </td>

            @if (User.IsInRole("Admin"))
            {
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            }
            else
            {
                <td>
                    <a asp-page="./Details" asp-route-id="@item.Id">Details</a>
                </td>
            }
        </tr>
    }
    </tbody>
</table>
